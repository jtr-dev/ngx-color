{"version":3,"file":"ngx-color.umd.js","sources":["../../src/lib/common/helpers/checkboard.ts","../../../src/lib/common/checkboard.component.ts","../../../src/lib/common/coordinates.directive.ts","../../../src/lib/common/alpha.component.ts","../../src/lib/common/helpers/color.ts","../../../src/lib/common/color-wrap.component.ts","../../../src/lib/common/editable-input.component.ts","../../../src/lib/common/hue.component.ts","../../../src/lib/common/raised.component.ts","../../../src/lib/common/saturation.component.ts","../../../src/lib/common/swatch.component.ts","../../../src/lib/common/shade.component.ts","../../../src/lib/common/ngx-color.ts"],"sourcesContent":["const checkboardCache: {[key: string]: string} = {};\n\nexport function render(c1: string, c2: string, size: number) {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = size * 2;\n  canvas.height = size * 2;\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return null;\n  } // If no context can be found, return early.\n  ctx.fillStyle = c1;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = c2;\n  ctx.fillRect(0, 0, size, size);\n  ctx.translate(size, size);\n  ctx.fillRect(0, 0, size, size);\n  return canvas.toDataURL();\n}\n\nexport function getCheckerboard(c1: string, c2: string, size: number) {\n  const key = `${c1}-${c2}-${size}`;\n  if (checkboardCache[key]) {\n    return checkboardCache[key];\n  }\n  const checkboard = render(c1, c2, size);\n  if (!checkboard) {\n    return null;\n  }\n  checkboardCache[key] = checkboard;\n  return checkboard;\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgModule,\n  OnInit,\n} from '@angular/core';\n\nimport { getCheckerboard } from './helpers/checkboard';\n\n@Component({\n  selector: 'color-checkboard',\n  template: `<div class=\"grid\" [ngStyle]=\"gridStyles\"></div>`,\n  styles: [\n    `\n  .grid {\n    top: 0px;\n    right: 0px;\n    bottom: 0px;\n    left: 0px;\n    position: absolute;\n  }\n  `,\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckboardComponent implements OnInit {\n  @Input() white = 'transparent';\n  @Input() size = 8;\n  @Input() grey = 'rgba(0,0,0,.08)';\n  @Input() boxShadow!: string;\n  @Input() borderRadius!: string;\n  gridStyles!: Record<string, string>;\n\n  ngOnInit() {\n    const background = getCheckerboard(this.white, this.grey, this.size);\n    this.gridStyles = {\n      borderRadius: this.borderRadius,\n      boxShadow: this.boxShadow,\n      background: `url(${background}) center left`,\n    };\n  }\n}\n\n@NgModule({\n  declarations: [CheckboardComponent],\n  exports: [CheckboardComponent],\n  imports: [CommonModule],\n})\nexport class CheckboardModule {}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  NgModule,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Directive({ selector: '[ngx-color-coordinates]' })\nexport class CoordinatesDirective implements OnInit, OnDestroy {\n  @Output()\n  coordinatesChange = new Subject<{\n    x: number;\n    y: number;\n    top: number;\n    left: number;\n    containerWidth: number;\n    containerHeight: number;\n    $event: any;\n  }>();\n  private mousechange = new Subject<{\n    x: number;\n    y: number;\n    $event: any;\n    isTouch: boolean;\n  }>();\n\n  private mouseListening = false;\n  private sub!: Subscription;\n  @HostListener('window:mousemove', ['$event', '$event.pageX', '$event.pageY'])\n  @HostListener('window:touchmove', [\n    '$event',\n    '$event.touches[0].clientX',\n    '$event.touches[0].clientY',\n    'true',\n  ])\n  mousemove($event: Event, x: number, y: number, isTouch = false) {\n    if (this.mouseListening) {\n      $event.preventDefault();\n      this.mousechange.next({ $event, x, y, isTouch });\n    }\n  }\n  @HostListener('window:mouseup')\n  @HostListener('window:touchend')\n  mouseup() {\n    this.mouseListening = false;\n  }\n  @HostListener('mousedown', ['$event', '$event.pageX', '$event.pageY'])\n  @HostListener('touchstart', [\n    '$event',\n    '$event.touches[0].clientX',\n    '$event.touches[0].clientY',\n    'true',\n  ])\n  mousedown($event: Event, x: number, y: number, isTouch = false) {\n    $event.preventDefault();\n    this.mouseListening = true;\n    this.mousechange.next({ $event, x, y, isTouch });\n  }\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.sub = this.mousechange\n      .pipe(\n        // limit times it is updated for the same area\n        distinctUntilChanged((p, q) => p.x === q.x && p.y === q.y),\n      )\n      .subscribe(n => this.handleChange(n.x, n.y, n.$event, n.isTouch));\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  handleChange(x: number, y: number, $event: Event, isTouch: boolean) {\n    const containerWidth = this.el.nativeElement.clientWidth;\n    const containerHeight = this.el.nativeElement.clientHeight;\n    const left =\n      x -\n      (this.el.nativeElement.getBoundingClientRect().left + window.pageXOffset);\n    let top = y - this.el.nativeElement.getBoundingClientRect().top;\n\n    if (!isTouch) {\n      top = top - window.pageYOffset;\n    }\n    this.coordinatesChange.next({\n      x,\n      y,\n      top,\n      left,\n      containerWidth,\n      containerHeight,\n      $event,\n    });\n  }\n}\n\n@NgModule({\n  declarations: [CoordinatesDirective],\n  exports: [CoordinatesDirective],\n})\nexport class CoordinatesModule {}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnChanges,\n  Output,\n} from '@angular/core';\n\nimport { CheckboardModule } from './checkboard.component';\nimport { CoordinatesModule } from './coordinates.directive';\nimport { HSLA, RGBA } from './helpers/color.interfaces';\n\n\n@Component({\n  selector: 'color-alpha',\n  template: `\n  <div class=\"alpha\" [style.border-radius]=\"radius\">\n    <div class=\"alpha-checkboard\">\n      <color-checkboard></color-checkboard>\n    </div>\n    <div class=\"alpha-gradient\" [ngStyle]=\"gradient\" [style.box-shadow]=\"shadow\" [style.border-radius]=\"radius\"></div>\n    <div ngx-color-coordinates (coordinatesChange)=\"handleChange($event)\" class=\"alpha-container color-alpha-{{direction}}\">\n      <div class=\"alpha-pointer\" [style.left.%]=\"pointerLeft\" [style.top.%]=\"pointerTop\">\n        <div class=\"alpha-slider\" [ngStyle]=\"pointer\"></div>\n      </div>\n    </div>\n  </div>\n  `,\n  styles: [\n    `\n    .alpha {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .alpha-checkboard {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      overflow: hidden;\n    }\n    .alpha-gradient {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .alpha-container {\n      position: relative;\n      height: 100%;\n      margin: 0 3px;\n    }\n    .alpha-pointer {\n      position: absolute;\n    }\n    .alpha-slider {\n      width: 4px;\n      border-radius: 1px;\n      height: 8px;\n      box-shadow: 0 0 2px rgba(0, 0, 0, .6);\n      background: #fff;\n      margin-top: 1px;\n      transform: translateX(-2px);\n    },\n  `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class AlphaComponent implements OnChanges {\n  @Input() hsl!: HSLA;\n  @Input() rgb!: RGBA;\n  @Input() pointer!: Record<string, string>;\n  @Input() shadow!: string;\n  @Input() radius!: number | string;\n  @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\n  @Output() onChange = new EventEmitter<any>();\n  gradient!: Record<string, string>;\n  pointerLeft!: number;\n  pointerTop!: number;\n\n  ngOnChanges() {\n    if (this.direction === 'vertical') {\n      this.pointerLeft = 0;\n      this.pointerTop = this.rgb.a * 100;\n      this.gradient = {\n        background: `linear-gradient(to bottom, rgba(${this.rgb.r},${\n          this.rgb.g\n        },${this.rgb.b}, 0) 0%,\n          rgba(${this.rgb.r},${this.rgb.g},${this.rgb.b}, 1) 100%)`,\n      };\n    } else {\n      this.gradient = {\n        background: `linear-gradient(to right, rgba(${this.rgb.r},${\n          this.rgb.g\n        },${this.rgb.b}, 0) 0%,\n          rgba(${this.rgb.r},${this.rgb.g},${this.rgb.b}, 1) 100%)`,\n      };\n      this.pointerLeft = this.rgb.a * 100;\n    }\n  }\n  handleChange({ top, left, containerHeight, containerWidth, $event }): void {\n    let data: any;\n    if (this.direction === 'vertical') {\n      let a: number;\n      if (top < 0) {\n        a = 0;\n      } else if (top > containerHeight) {\n        a = 1;\n      } else {\n        a = Math.round(top * 100 / containerHeight) / 100;\n      }\n\n      if (this.hsl.a !== a) {\n        data = {\n          h: this.hsl.h,\n          s: this.hsl.s,\n          l: this.hsl.l,\n          a,\n          source: 'rgb',\n        };\n      }\n    } else {\n      let a: number;\n      if (left < 0) {\n        a = 0;\n      } else if (left > containerWidth) {\n        a = 1;\n      } else {\n        a = Math.round(left * 100 / containerWidth) / 100;\n      }\n\n      if (this.hsl.a !== a) {\n        data = {\n          h: this.hsl.h,\n          s: this.hsl.s,\n          l: this.hsl.l,\n          a,\n          source: 'rgb',\n        };\n      }\n    }\n\n    if (!data) {\n      return;\n    }\n\n    this.onChange.emit({ data, $event });\n  }\n}\n\n@NgModule({\n  declarations: [AlphaComponent],\n  exports: [AlphaComponent],\n  imports: [CommonModule, CheckboardModule, CoordinatesModule],\n})\nexport class AlphaModule {}\n","import { TinyColor } from '@ctrl/tinycolor';\n\nimport { Color } from './color.interfaces';\n\nexport function simpleCheckForValidColor(data) {\n  const keysToCheck = ['r', 'g', 'b', 'a', 'h', 's', 'l', 'v'];\n  let checked = 0;\n  let passed = 0;\n  keysToCheck.forEach(letter => {\n    if (!data[letter]) {\n      return;\n    }\n    checked += 1;\n    if (!isNaN(data[letter])) {\n      passed += 1;\n    }\n    if (letter === 's' || letter === 'l') {\n      const percentPatt = /^\\d+%$/;\n      if (percentPatt.test(data[letter])) {\n        passed += 1;\n      }\n    }\n  });\n  return checked === passed ? data : false;\n}\n\nexport function toState(data, oldHue?: number, disableAlpha?: boolean): Color {\n  const color = data.hex ? new TinyColor(data.hex) : new TinyColor(data);\n  if (disableAlpha) {\n    color.setAlpha(1);\n  }\n\n  const hsl = color.toHsl();\n  const hsv = color.toHsv();\n  const rgb = color.toRgb();\n  const hex = color.toHex();\n  if (hsl.s === 0) {\n    hsl.h = oldHue || 0;\n    hsv.h = oldHue || 0;\n  }\n  const transparent = hex === '000000' && rgb.a === 0;\n\n  return {\n    hsl,\n    hex: transparent ? 'transparent' : color.toHexString(),\n    rgb,\n    hsv,\n    oldHue: data.h || oldHue || hsl.h,\n    source: data.source,\n  };\n}\n\nexport function isValidHex(hex: string) {\n  return new TinyColor(hex).isValid;\n}\n\nexport function getContrastingColor(data) {\n  if (!data) {\n    return '#fff';\n  }\n  const col = toState(data);\n  if (col.hex === 'transparent') {\n    return 'rgba(0,0,0,0.4)';\n  }\n  const yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1000;\n  return yiq >= 128 ? '#000' : '#fff';\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { simpleCheckForValidColor, toState } from './helpers/color';\nimport { Color, HSLA, HSVA, RGBA } from './helpers/color.interfaces';\n\nexport interface ColorEvent {\n  $event: Event;\n  color: Color;\n}\n\n@Component({\n  // create seletor base for test override property\n  selector: 'color-wrap',\n  template: ``,\n})\nexport class ColorWrap implements OnInit, OnChanges, OnDestroy {\n  @Input() className?: string;\n  @Input() color: HSLA | HSVA | RGBA | string = {\n    h: 250,\n    s: 0.5,\n    l: 0.2,\n    a: 1,\n  };\n  @Output() onChange = new EventEmitter<ColorEvent>();\n  @Output() onChangeComplete = new EventEmitter<ColorEvent>();\n  @Output() onSwatchHover = new EventEmitter<ColorEvent>();\n  oldHue!: number;\n  hsl!: HSLA;\n  hsv!: HSVA;\n  rgb!: RGBA;\n  hex!: string;\n  source!: string;\n  currentColor!: string;\n  changes!: Subscription;\n  disableAlpha?: boolean;\n  bnw!: boolean;\n\n  ngOnInit() {\n    this.changes = this.onChange\n      .pipe(debounceTime(100))\n      .subscribe(x => this.onChangeComplete.emit(x));\n    this.setState(toState(this.color, 0));\n    this.currentColor = this.hex;\n  }\n  ngOnChanges() {\n    this.setState(toState(this.color, this.oldHue));\n  }\n  ngOnDestroy() {\n    this.changes.unsubscribe();\n  }\n  setState(data) {\n    this.oldHue = data.oldHue;\n    this.hsl = data.hsl;\n    this.hsv = data.hsv;\n    this.rgb = data.rgb;\n    this.hex = data.hex;\n    this.source = data.source;\n    this.afterValidChange();\n  }\n  handleChange(data, $event) {\n    const isValidColor = simpleCheckForValidColor(data);\n    if (isValidColor) {\n      const color = toState(data, data.h || this.oldHue, this.disableAlpha);\n      this.setState(color);\n      this.onChange.emit({ color, $event });\n      this.afterValidChange();\n    }\n  }\n  /** hook for components after a complete change */\n  afterValidChange() {}\n\n  handleSwatchHover(data, $event) {\n    const isValidColor = simpleCheckForValidColor(data);\n    if (isValidColor) {\n      const color = toState(data, data.h || this.oldHue);\n      this.setState(color);\n      this.onSwatchHover.emit({ color, $event });\n    }\n  }\n}\n\n@NgModule({\n  declarations: [ColorWrap],\n  exports: [ColorWrap],\n  imports: [CommonModule],\n})\nexport class ColorWrapModule {}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { fromEvent, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'color-editable-input',\n  template: `\n    <div class=\"wrap\" [ngStyle]=\"wrapStyle\">\n      <input\n        [ngStyle]=\"inputStyle\"\n        spellCheck=\"false\"\n        [value]=\"currentValue\"\n        [placeholder]=\"placeholder\"\n        (keydown)=\"handleKeydown($event)\"\n        (keyup)=\"handleKeyup($event)\"\n        (focus)=\"handleFocus($event)\"\n        (focusout)=\"handleFocusOut($event)\"\n      />\n      <span *ngIf=\"label\" [ngStyle]=\"labelStyle\" (mousedown)=\"handleMousedown($event)\">\n        {{ label }}\n      </span>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n      }\n      .wrap {\n        position: relative;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditableInputComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() style!: {\n    wrap?: Record<string, any>;\n    input?: Record<string, any>;\n    label?: Record<string, any>;\n  };\n  @Input() label!: string;\n  @Input() value!: string | number;\n  @Input() arrowOffset!: number;\n  @Input() dragLabel!: boolean;\n  @Input() dragMax!: number;\n  @Input() placeholder = '';\n  @Output() onChange = new EventEmitter();\n  currentValue!: string | number;\n  blurValue!: string;\n  wrapStyle!: Record<string, string>;\n  inputStyle!: Record<string, string>;\n  labelStyle!: Record<string, string>;\n  focus = false;\n  mousemove!: Subscription;\n  mouseup!: Subscription;\n\n  ngOnInit() {\n    this.wrapStyle = this.style && this.style.wrap ? this.style.wrap : {};\n    this.inputStyle = this.style && this.style.input ? this.style.input : {};\n    this.labelStyle = this.style && this.style.label ? this.style.label : {};\n    if (this.dragLabel) {\n      this.labelStyle.cursor = 'ew-resize';\n    }\n  }\n  handleFocus($event) {\n    this.focus = true;\n  }\n  handleFocusOut($event) {\n    this.focus = false;\n    this.currentValue = this.blurValue;\n  }\n  handleKeydown($event) {\n    // In case `e.target.value` is a percentage remove the `%` character\n    // and update accordingly with a percentage\n    // https://github.com/casesandberg/react-color/issues/383\n    const stringValue = String($event.target.value);\n    const isPercentage = stringValue.indexOf('%') > -1;\n    const num = Number(stringValue.replace(/%/g, ''));\n    if (isNaN(num)) {\n      return;\n    }\n    const amount = this.arrowOffset || 1;\n\n    // Up\n    if ($event.keyCode === 38) {\n      if (this.label) {\n        this.onChange.emit({\n          data: { [this.label]: num + amount },\n          $event,\n        });\n      } else {\n        this.onChange.emit({ data: num + amount, $event });\n      }\n\n      if (isPercentage) {\n        this.currentValue = `${num + amount}%`;\n      } else {\n        this.currentValue = num + amount;\n      }\n    }\n\n    // Down\n    if ($event.keyCode === 40) {\n      if (this.label) {\n        this.onChange.emit({\n          data: { [this.label]: num - amount },\n          $event,\n        });\n      } else {\n        this.onChange.emit({ data: num - amount, $event });\n      }\n\n      if (isPercentage) {\n        this.currentValue = `${num - amount}%`;\n      } else {\n        this.currentValue = num - amount;\n      }\n    }\n  }\n  handleKeyup($event) {\n    if ($event.keyCode === 40 || $event.keyCode === 38) {\n      return;\n    }\n    if (`${this.currentValue}` === $event.target.value) {\n      return;\n    }\n\n    if (this.label) {\n      this.onChange.emit({\n        data: { [this.label]: $event.target.value },\n        $event,\n      });\n    } else {\n      this.onChange.emit({ data: $event.target.value, $event });\n    }\n  }\n  ngOnChanges() {\n    if (!this.focus) {\n      this.currentValue = String(this.value).toUpperCase();\n      this.blurValue = String(this.value).toUpperCase();\n    } else {\n      this.blurValue = String(this.value).toUpperCase();\n    }\n  }\n  ngOnDestroy() {\n    this.unsubscribe();\n  }\n  subscribe() {\n    this.mousemove = fromEvent(document, 'mousemove').subscribe((ev: Event) => this.handleDrag(ev));\n    this.mouseup = fromEvent(document, 'mouseup').subscribe(() => this.unsubscribe());\n  }\n  unsubscribe() {\n    if (this.mousemove) {\n      this.mousemove.unsubscribe();\n    }\n    if (this.mouseup) {\n      this.mouseup.unsubscribe();\n    }\n  }\n  handleMousedown($event: Event) {\n    if (this.dragLabel) {\n      $event.preventDefault();\n      this.handleDrag($event);\n      this.subscribe();\n    }\n  }\n  handleDrag($event) {\n    if (this.dragLabel) {\n      const newValue = Math.round(this.value + $event.movementX);\n      if (newValue >= 0 && newValue <= this.dragMax) {\n        this.onChange.emit({ data: { [this.label]: newValue }, $event });\n      }\n    }\n  }\n}\n\n@NgModule({\n  declarations: [EditableInputComponent],\n  exports: [EditableInputComponent],\n  imports: [CommonModule],\n})\nexport class EditableInputModule {}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnChanges,\n  Output,\n} from '@angular/core';\n\nimport { CoordinatesModule } from './coordinates.directive';\nimport { HSLA, HSLAsource } from './helpers/color.interfaces';\n\n@Component({\n  selector: 'color-hue',\n  template: `\n  <div class=\"color-hue color-hue-{{direction}}\" [style.border-radius.px]=\"radius\" [style.box-shadow]=\"shadow\">\n    <div ngx-color-coordinates (coordinatesChange)=\"handleChange($event)\" class=\"color-hue-container\">\n      <div class=\"color-hue-pointer\" [style.left]=\"left\" [style.top]=\"top\" *ngIf=\"!hidePointer\">\n        <div class=\"color-hue-slider\" [ngStyle]=\"pointer\"></div>\n      </div>\n    </div>\n  </div>\n  `,\n  styles: [\n    `\n    .color-hue {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .color-hue-container {\n      margin: 0 2px;\n      position: relative;\n      height: 100%;\n    }\n    .color-hue-pointer {\n      position: absolute;\n    }\n    .color-hue-slider {\n      margin-top: 1px;\n      width: 4px;\n      border-radius: 1px;\n      height: 8px;\n      box-shadow: 0 0 2px rgba(0, 0, 0, .6);\n      background: #fff;\n      transform: translateX(-2px);\n    }\n    .color-hue-horizontal {\n      background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0\n        33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n    }\n    .color-hue-vertical {\n      background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,\n        #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n    }\n  `,\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HueComponent implements OnChanges {\n  @Input() hsl!: HSLA;\n  @Input() pointer!: Record<string, string>;\n  @Input() radius!: number;\n  @Input() shadow!: string;\n  @Input() hidePointer = false;\n  @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\n  @Output() onChange = new EventEmitter<{ data: HSLAsource; $event: Event }>();\n  left = '0px';\n  top = '';\n\n  ngOnChanges(): void {\n    if (this.direction === 'horizontal') {\n      this.left = `${this.hsl.h * 100 / 360}%`;\n    } else {\n      this.top = `${-(this.hsl.h * 100 / 360) + 100}%`;\n    }\n  }\n  handleChange({ top, left, containerHeight, containerWidth, $event }): void {\n    let data: HSLAsource | undefined;\n    if (this.direction === 'vertical') {\n      let h: number;\n      if (top < 0) {\n        h = 359;\n      } else if (top > containerHeight) {\n        h = 0;\n      } else {\n        const percent = -(top * 100 / containerHeight) + 100;\n        h = 360 * percent / 100;\n      }\n\n      if (this.hsl.h !== h) {\n        data = {\n          h,\n          s: this.hsl.s,\n          l: this.hsl.l,\n          a: this.hsl.a,\n          source: 'rgb',\n        };\n      }\n    } else {\n      let h: number;\n      if (left < 0) {\n        h = 0;\n      } else if (left > containerWidth) {\n        h = 359;\n      } else {\n        const percent = left * 100 / containerWidth;\n        h = 360 * percent / 100;\n      }\n\n      if (this.hsl.h !== h) {\n        data = {\n          h,\n          s: this.hsl.s,\n          l: this.hsl.l,\n          a: this.hsl.a,\n          source: 'rgb',\n        };\n      }\n    }\n\n    if (!data) {\n      return;\n    }\n\n    this.onChange.emit({ data, $event });\n  }\n}\n\n@NgModule({\n  declarations: [HueComponent],\n  exports: [HueComponent],\n  imports: [CommonModule, CoordinatesModule],\n})\nexport class HueModule {}\n","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input, NgModule } from '@angular/core';\n\nexport type zDepth = 0 | 1 | 2 | 3 | 4 | 5;\n\n@Component({\n  selector: 'color-raised',\n  template: `\n  <div class=\"raised-wrap\">\n    <div class=\"raised-bg zDepth-{{zDepth}}\" [style.background]=\"background\"></div>\n    <div class=\"raised-content\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n  `,\n  styles: [`\n    .raised-wrap {\n      position: relative;\n      display: inline-block;\n    }\n    .raised-bg {\n      position: absolute;\n      top: 0px;\n      right: 0px;\n      bottom: 0px;\n      left: 0px;\n    }\n    .raised-content {\n      position: relative;\n    }\n    .zDepth-0 {\n      box-shadow: none;\n    }\n    .zDepth-1 {\n      box-shadow: 0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16);\n    }\n    .zDepth-2 {\n      box-shadow: 0 6px 20px rgba(0,0,0,.19), 0 8px 17px rgba(0,0,0,.2);\n    }\n    .zDepth-3 {\n      box-shadow: 0 17px 50px rgba(0,0,0,.19), 0 12px 15px rgba(0,0,0,.24);\n    }\n    .zDepth-4 {\n      box-shadow: 0 25px 55px rgba(0,0,0,.21), 0 16px 28px rgba(0,0,0,.22);\n    }\n    .zDepth-5 {\n      box-shadow: 0 40px 77px rgba(0,0,0,.22), 0 27px 24px rgba(0,0,0,.2);\n    }\n  `],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RaisedComponent {\n  @Input() zDepth: zDepth = 1;\n  @Input() radius = 1;\n  @Input() background = '#fff';\n}\n\n@NgModule({\n  declarations: [RaisedComponent],\n  exports: [RaisedComponent],\n  imports: [CommonModule],\n})\nexport class RaisedModule { }\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnChanges,\n  Output,\n} from '@angular/core';\n\n\nimport { CoordinatesModule } from './coordinates.directive';\nimport { HSLA, HSVA, HSVAsource } from './helpers/color.interfaces';\n\n@Component({\n  selector: 'color-saturation',\n  template: `\n  <div class=\"color-saturation\" ngx-color-coordinates (coordinatesChange)=\"handleChange($event)\" [style.background]=\"background\">\n    <div class=\"saturation-white\">\n      <div class=\"saturation-black\"></div>\n      <div class=\"saturation-pointer\" [ngStyle]=\"pointer\" [style.top]=\"pointerTop\" [style.left]=\"pointerLeft\">\n        <div class=\"saturation-circle\" [ngStyle]=\"circle\"></div>\n      </div>\n    </div>\n  </div>\n  `,\n  styles: [\n    `\n    .saturation-white {\n      background: linear-gradient(to right, #fff, rgba(255,255,255,0));\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .saturation-black {\n      background: linear-gradient(to top, #000, rgba(0,0,0,0));\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .color-saturation {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .saturation-pointer {\n      position: absolute;\n      cursor: default;\n    }\n    .saturation-circle {\n      width: 4px;\n      height: 4px;\n      box-shadow: 0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3), 0 0 1px 2px rgba(0,0,0,.4);\n      border-radius: 50%;\n      cursor: hand;\n      transform: translate(-2px, -4px);\n    }\n  `,\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SaturationComponent implements OnChanges {\n  @Input() hsl!: HSLA;\n  @Input() hsv!: HSVA;\n  @Input() radius!: number;\n  @Input() pointer!: Record<string, string>;\n  @Input() circle!: Record<string, string>;\n  @Output() onChange = new EventEmitter<{ data: HSVAsource; $event: Event }>();\n  background!: string;\n  pointerTop!: string;\n  pointerLeft!: string;\n\n  ngOnChanges() {\n    this.background = `hsl(${this.hsl.h}, 100%, 50%)`;\n    this.pointerTop = -(this.hsv.v * 100) + 1 + 100 + '%';\n    this.pointerLeft = this.hsv.s * 100 + '%';\n  }\n  handleChange({ top, left, containerHeight, containerWidth, $event }) {\n    if (left < 0) {\n      left = 0;\n    } else if (left > containerWidth) {\n      left = containerWidth;\n    } else if (top < 0) {\n      top = 0;\n    } else if (top > containerHeight) {\n      top = containerHeight;\n    }\n\n    const saturation = left / containerWidth;\n    let bright = -(top / containerHeight) + 1;\n    bright = bright > 0 ? bright : 0;\n    bright = bright > 1 ? 1 : bright;\n\n    const data: HSVAsource = {\n      h: this.hsl.h,\n      s: saturation,\n      v: bright,\n      a: this.hsl.a,\n      source: 'hsva',\n    };\n    this.onChange.emit({ data, $event });\n  }\n}\n\n@NgModule({\n  declarations: [SaturationComponent],\n  exports: [SaturationComponent],\n  imports: [CommonModule, CoordinatesModule],\n})\nexport class SaturationModule {}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { CheckboardModule } from './checkboard.component';\n\n@Component({\n  selector: 'color-swatch',\n  template: `\n    <div\n      class=\"swatch\"\n      [ngStyle]=\"currentStyles()\"\n      [attr.title]=\"color\"\n      (click)=\"handleClick(color, $event)\"\n      (keydown.enter)=\"handleClick(color, $event)\"\n      (focus)=\"handleFocus()\"\n      (blur)=\"handleFocusOut()\"\n      (mouseover)=\"handleHover(color, $event)\"\n      tabindex=\"0\"\n    >\n      <ng-content></ng-content>\n      <color-checkboard\n        *ngIf=\"color === 'transparent'\"\n        boxShadow=\"inset 0 0 0 1px rgba(0,0,0,0.1)\"\n      ></color-checkboard>\n    </div>\n  `,\n  styles: [\n    `\n      .swatch {\n        outline: none;\n        height: 100%;\n        width: 100%;\n        cursor: pointer;\n        position: relative;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SwatchComponent implements OnInit {\n  @Input() color!: string;\n  @Input() style: Record<string, string> = {};\n  @Input() focusStyle: Record<string, string> = {};\n  @Input() focus!: boolean;\n  @Output() onClick = new EventEmitter<any>();\n  @Output() onHover = new EventEmitter<any>();\n  divStyles: Record<string, string> = {};\n  focusStyles: Record<string, string> = {};\n  inFocus = false;\n\n  ngOnInit() {\n    this.divStyles = {\n      background: this.color as string,\n      ...this.style,\n    };\n  }\n  currentStyles() {\n    this.focusStyles = {\n      ...this.divStyles,\n      ...this.focusStyle,\n    };\n    return this.focus || this.inFocus ? this.focusStyles : this.divStyles;\n  }\n  handleFocusOut() {\n    this.inFocus = false;\n  }\n  handleFocus() {\n    this.inFocus = true;\n  }\n  handleHover(hex: string, $event) {\n    this.onHover.emit({ hex, $event });\n  }\n  handleClick(hex: string, $event) {\n    this.onClick.emit({ hex, $event });\n  }\n}\n\n@NgModule({\n  declarations: [SwatchComponent],\n  exports: [SwatchComponent],\n  imports: [CommonModule, CheckboardModule],\n})\nexport class SwatchModule {}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { CoordinatesModule } from './coordinates.directive';\nimport { HSLA, RGBA } from './helpers/color.interfaces';\nimport { TinyColor } from '@ctrl/tinycolor';\n\n\n@Component({\n  selector: 'color-shade',\n  template: `\n    <div class=\"shade\" [style.border-radius]=\"radius\">\n      <div\n        class=\"shade-gradient\"\n        [ngStyle]=\"gradient\"\n        [style.box-shadow]=\"shadow\"\n        [style.border-radius]=\"radius\"\n      ></div>\n      <div\n        ngx-color-coordinates\n        (coordinatesChange)=\"handleChange($event)\"\n        class=\"shade-container\"\n      >\n        <div\n          class=\"shade-pointer\"\n          [style.left.%]=\"pointerLeft\"\n          [style.top.%]=\"pointerTop\"\n        >\n          <div class=\"shade-slider\" [ngStyle]=\"pointer\"></div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n    .shade {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .shade-gradient {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .shade-container {\n      position: relative;\n      height: 100%;\n      margin: 0 3px;\n    }\n    .shade-pointer {\n      position: absolute;\n    }\n    .shade-slider {\n      width: 4px;\n      border-radius: 1px;\n      height: 8px;\n      box-shadow: 0 0 2px rgba(0, 0, 0, .6);\n      background: #fff;\n      margin-top: 1px;\n      transform: translateX(-2px);\n    },\n  `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class ShadeComponent implements OnChanges {\n  @Input() hsl!: HSLA;\n  @Input() rgb!: RGBA;\n  @Input() pointer!: Record<string, string>;\n  @Input() shadow!: string;\n  @Input() radius!: string;\n  @Input() bnw!: boolean;\n  @Output() onChange = new EventEmitter<any>();\n  gradient!: Record<string, string>;\n  pointerLeft!: number;\n  pointerTop?: number;\n\n  ngOnChanges() {\n    const colorGradient = `linear-gradient(to right,\n      hsl(${this.hsl.h}, 90%, 55%),\n      #000)`;\n    const whiteToBlackGradient = `linear-gradient(to right, #fff, #000)`;\n    const bgGradient = this.bnw ? whiteToBlackGradient : colorGradient;\n\n    this.gradient = {\n      background: bgGradient\n    };\n    const hsv = new TinyColor(this.hsl).toHsv();\n    this.pointerLeft = 100 - (hsv.v * 100);\n  }\n\n  handleChange({ left, containerWidth, $event }): void {\n    let data;\n    let v: number;\n    if (left < 0) {\n      v = 0;\n    } else if (left > containerWidth) {\n      v = 1;\n    } else {\n      v = Math.round((left * 100) / containerWidth) / 100;\n    }\n\n    const hsv = new TinyColor(this.hsl).toHsv();\n    if (hsv.v !== v) {\n      data = {\n        h: this.hsl.h,\n        s: this.bnw ? 0 : 1,\n        v: 1 - v,\n        l: this.hsl.l,\n        a: this.hsl.a,\n        source: 'rgb',\n      };\n    }\n\n    if (!data) {\n      return;\n    }\n\n    this.onChange.emit({ data, $event });\n  }\n}\n\n@NgModule({\n  declarations: [ShadeComponent],\n  exports: [ShadeComponent],\n  imports: [CommonModule, CoordinatesModule],\n})\nexport class ShadeModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Component","ChangeDetectionStrategy","Input","NgModule","CommonModule","Subject","distinctUntilChanged","Directive","ElementRef","Output","HostListener","EventEmitter","TinyColor","debounceTime","fromEvent"],"mappings":"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"}