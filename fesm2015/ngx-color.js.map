{"version":3,"file":"ngx-color.js","sources":["../../src/lib/common/helpers/checkboard.ts","../../../src/lib/common/checkboard.component.ts","../../../src/lib/common/coordinates.directive.ts","../../../src/lib/common/alpha.component.ts","../../src/lib/common/helpers/color.ts","../../../src/lib/common/color-wrap.component.ts","../../../src/lib/common/editable-input.component.ts","../../../src/lib/common/hue.component.ts","../../../src/lib/common/raised.component.ts","../../../src/lib/common/saturation.component.ts","../../../src/lib/common/swatch.component.ts","../../../src/lib/common/shade.component.ts","../../../src/lib/common/ngx-color.ts"],"sourcesContent":["const checkboardCache: {[key: string]: string} = {};\n\nexport function render(c1: string, c2: string, size: number) {\n  if (typeof document === 'undefined') {\n    return null;\n  }\n  const canvas = document.createElement('canvas');\n  canvas.width = size * 2;\n  canvas.height = size * 2;\n  const ctx = canvas.getContext('2d');\n  if (!ctx) {\n    return null;\n  } // If no context can be found, return early.\n  ctx.fillStyle = c1;\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  ctx.fillStyle = c2;\n  ctx.fillRect(0, 0, size, size);\n  ctx.translate(size, size);\n  ctx.fillRect(0, 0, size, size);\n  return canvas.toDataURL();\n}\n\nexport function getCheckerboard(c1: string, c2: string, size: number) {\n  const key = `${c1}-${c2}-${size}`;\n  if (checkboardCache[key]) {\n    return checkboardCache[key];\n  }\n  const checkboard = render(c1, c2, size);\n  if (!checkboard) {\n    return null;\n  }\n  checkboardCache[key] = checkboard;\n  return checkboard;\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Input,\n  NgModule,\n  OnInit,\n} from '@angular/core';\n\nimport { getCheckerboard } from './helpers/checkboard';\n\n@Component({\n  selector: 'color-checkboard',\n  template: `<div class=\"grid\" [ngStyle]=\"gridStyles\"></div>`,\n  styles: [\n    `\n  .grid {\n    top: 0px;\n    right: 0px;\n    bottom: 0px;\n    left: 0px;\n    position: absolute;\n  }\n  `,\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CheckboardComponent implements OnInit {\n  @Input() white = 'transparent';\n  @Input() size = 8;\n  @Input() grey = 'rgba(0,0,0,.08)';\n  @Input() boxShadow!: string;\n  @Input() borderRadius!: string;\n  gridStyles!: Record<string, string>;\n\n  ngOnInit() {\n    const background = getCheckerboard(this.white, this.grey, this.size);\n    this.gridStyles = {\n      borderRadius: this.borderRadius,\n      boxShadow: this.boxShadow,\n      background: `url(${background}) center left`,\n    };\n  }\n}\n\n@NgModule({\n  declarations: [CheckboardComponent],\n  exports: [CheckboardComponent],\n  imports: [CommonModule],\n})\nexport class CheckboardModule {}\n","import {\n  Directive,\n  ElementRef,\n  HostListener,\n  NgModule,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { Subject, Subscription } from 'rxjs';\nimport { distinctUntilChanged } from 'rxjs/operators';\n\n@Directive({ selector: '[ngx-color-coordinates]' })\nexport class CoordinatesDirective implements OnInit, OnDestroy {\n  @Output()\n  coordinatesChange = new Subject<{\n    x: number;\n    y: number;\n    top: number;\n    left: number;\n    containerWidth: number;\n    containerHeight: number;\n    $event: any;\n  }>();\n  private mousechange = new Subject<{\n    x: number;\n    y: number;\n    $event: any;\n    isTouch: boolean;\n  }>();\n\n  private mouseListening = false;\n  private sub!: Subscription;\n  @HostListener('window:mousemove', ['$event', '$event.pageX', '$event.pageY'])\n  @HostListener('window:touchmove', [\n    '$event',\n    '$event.touches[0].clientX',\n    '$event.touches[0].clientY',\n    'true',\n  ])\n  mousemove($event: Event, x: number, y: number, isTouch = false) {\n    if (this.mouseListening) {\n      $event.preventDefault();\n      this.mousechange.next({ $event, x, y, isTouch });\n    }\n  }\n  @HostListener('window:mouseup')\n  @HostListener('window:touchend')\n  mouseup() {\n    this.mouseListening = false;\n  }\n  @HostListener('mousedown', ['$event', '$event.pageX', '$event.pageY'])\n  @HostListener('touchstart', [\n    '$event',\n    '$event.touches[0].clientX',\n    '$event.touches[0].clientY',\n    'true',\n  ])\n  mousedown($event: Event, x: number, y: number, isTouch = false) {\n    $event.preventDefault();\n    this.mouseListening = true;\n    this.mousechange.next({ $event, x, y, isTouch });\n  }\n\n  constructor(private el: ElementRef) {}\n\n  ngOnInit() {\n    this.sub = this.mousechange\n      .pipe(\n        // limit times it is updated for the same area\n        distinctUntilChanged((p, q) => p.x === q.x && p.y === q.y),\n      )\n      .subscribe(n => this.handleChange(n.x, n.y, n.$event, n.isTouch));\n  }\n\n  ngOnDestroy() {\n    this.sub.unsubscribe();\n  }\n\n  handleChange(x: number, y: number, $event: Event, isTouch: boolean) {\n    const containerWidth = this.el.nativeElement.clientWidth;\n    const containerHeight = this.el.nativeElement.clientHeight;\n    const left =\n      x -\n      (this.el.nativeElement.getBoundingClientRect().left + window.pageXOffset);\n    let top = y - this.el.nativeElement.getBoundingClientRect().top;\n\n    if (!isTouch) {\n      top = top - window.pageYOffset;\n    }\n    this.coordinatesChange.next({\n      x,\n      y,\n      top,\n      left,\n      containerWidth,\n      containerHeight,\n      $event,\n    });\n  }\n}\n\n@NgModule({\n  declarations: [CoordinatesDirective],\n  exports: [CoordinatesDirective],\n})\nexport class CoordinatesModule {}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnChanges,\n  Output,\n} from '@angular/core';\n\nimport { CheckboardModule } from './checkboard.component';\nimport { CoordinatesModule } from './coordinates.directive';\nimport { HSLA, RGBA } from './helpers/color.interfaces';\n\n\n@Component({\n  selector: 'color-alpha',\n  template: `\n  <div class=\"alpha\" [style.border-radius]=\"radius\">\n    <div class=\"alpha-checkboard\">\n      <color-checkboard></color-checkboard>\n    </div>\n    <div class=\"alpha-gradient\" [ngStyle]=\"gradient\" [style.box-shadow]=\"shadow\" [style.border-radius]=\"radius\"></div>\n    <div ngx-color-coordinates (coordinatesChange)=\"handleChange($event)\" class=\"alpha-container color-alpha-{{direction}}\">\n      <div class=\"alpha-pointer\" [style.left.%]=\"pointerLeft\" [style.top.%]=\"pointerTop\">\n        <div class=\"alpha-slider\" [ngStyle]=\"pointer\"></div>\n      </div>\n    </div>\n  </div>\n  `,\n  styles: [\n    `\n    .alpha {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .alpha-checkboard {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n      overflow: hidden;\n    }\n    .alpha-gradient {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .alpha-container {\n      position: relative;\n      height: 100%;\n      margin: 0 3px;\n    }\n    .alpha-pointer {\n      position: absolute;\n    }\n    .alpha-slider {\n      width: 4px;\n      border-radius: 1px;\n      height: 8px;\n      box-shadow: 0 0 2px rgba(0, 0, 0, .6);\n      background: #fff;\n      margin-top: 1px;\n      transform: translateX(-2px);\n    },\n  `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class AlphaComponent implements OnChanges {\n  @Input() hsl!: HSLA;\n  @Input() rgb!: RGBA;\n  @Input() pointer!: Record<string, string>;\n  @Input() shadow!: string;\n  @Input() radius!: number | string;\n  @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\n  @Output() onChange = new EventEmitter<any>();\n  gradient!: Record<string, string>;\n  pointerLeft!: number;\n  pointerTop!: number;\n\n  ngOnChanges() {\n    if (this.direction === 'vertical') {\n      this.pointerLeft = 0;\n      this.pointerTop = this.rgb.a * 100;\n      this.gradient = {\n        background: `linear-gradient(to bottom, rgba(${this.rgb.r},${\n          this.rgb.g\n        },${this.rgb.b}, 0) 0%,\n          rgba(${this.rgb.r},${this.rgb.g},${this.rgb.b}, 1) 100%)`,\n      };\n    } else {\n      this.gradient = {\n        background: `linear-gradient(to right, rgba(${this.rgb.r},${\n          this.rgb.g\n        },${this.rgb.b}, 0) 0%,\n          rgba(${this.rgb.r},${this.rgb.g},${this.rgb.b}, 1) 100%)`,\n      };\n      this.pointerLeft = this.rgb.a * 100;\n    }\n  }\n  handleChange({ top, left, containerHeight, containerWidth, $event }): void {\n    let data: any;\n    if (this.direction === 'vertical') {\n      let a: number;\n      if (top < 0) {\n        a = 0;\n      } else if (top > containerHeight) {\n        a = 1;\n      } else {\n        a = Math.round(top * 100 / containerHeight) / 100;\n      }\n\n      if (this.hsl.a !== a) {\n        data = {\n          h: this.hsl.h,\n          s: this.hsl.s,\n          l: this.hsl.l,\n          a,\n          source: 'rgb',\n        };\n      }\n    } else {\n      let a: number;\n      if (left < 0) {\n        a = 0;\n      } else if (left > containerWidth) {\n        a = 1;\n      } else {\n        a = Math.round(left * 100 / containerWidth) / 100;\n      }\n\n      if (this.hsl.a !== a) {\n        data = {\n          h: this.hsl.h,\n          s: this.hsl.s,\n          l: this.hsl.l,\n          a,\n          source: 'rgb',\n        };\n      }\n    }\n\n    if (!data) {\n      return;\n    }\n\n    this.onChange.emit({ data, $event });\n  }\n}\n\n@NgModule({\n  declarations: [AlphaComponent],\n  exports: [AlphaComponent],\n  imports: [CommonModule, CheckboardModule, CoordinatesModule],\n})\nexport class AlphaModule {}\n","import { TinyColor } from '@ctrl/tinycolor';\n\nimport { Color } from './color.interfaces';\n\nexport function simpleCheckForValidColor(data) {\n  const keysToCheck = ['r', 'g', 'b', 'a', 'h', 's', 'l', 'v'];\n  let checked = 0;\n  let passed = 0;\n  keysToCheck.forEach(letter => {\n    if (!data[letter]) {\n      return;\n    }\n    checked += 1;\n    if (!isNaN(data[letter])) {\n      passed += 1;\n    }\n    if (letter === 's' || letter === 'l') {\n      const percentPatt = /^\\d+%$/;\n      if (percentPatt.test(data[letter])) {\n        passed += 1;\n      }\n    }\n  });\n  return checked === passed ? data : false;\n}\n\nexport function toState(data, oldHue?: number, disableAlpha?: boolean): Color {\n  const color = data.hex ? new TinyColor(data.hex) : new TinyColor(data);\n  if (disableAlpha) {\n    color.setAlpha(1);\n  }\n\n  const hsl = color.toHsl();\n  const hsv = color.toHsv();\n  const rgb = color.toRgb();\n  const hex = color.toHex();\n  if (hsl.s === 0) {\n    hsl.h = oldHue || 0;\n    hsv.h = oldHue || 0;\n  }\n  const transparent = hex === '000000' && rgb.a === 0;\n\n  return {\n    hsl,\n    hex: transparent ? 'transparent' : color.toHexString(),\n    rgb,\n    hsv,\n    oldHue: data.h || oldHue || hsl.h,\n    source: data.source,\n  };\n}\n\nexport function isValidHex(hex: string) {\n  return new TinyColor(hex).isValid;\n}\n\nexport function getContrastingColor(data) {\n  if (!data) {\n    return '#fff';\n  }\n  const col = toState(data);\n  if (col.hex === 'transparent') {\n    return 'rgba(0,0,0,0.4)';\n  }\n  const yiq = (col.rgb.r * 299 + col.rgb.g * 587 + col.rgb.b * 114) / 1000;\n  return yiq >= 128 ? '#000' : '#fff';\n}\n","import { CommonModule } from '@angular/common';\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { Subscription } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { simpleCheckForValidColor, toState } from './helpers/color';\nimport { Color, HSLA, HSVA, RGBA } from './helpers/color.interfaces';\n\nexport interface ColorEvent {\n  $event: Event;\n  color: Color;\n}\n\n@Component({\n  // create seletor base for test override property\n  selector: 'color-wrap',\n  template: ``,\n})\nexport class ColorWrap implements OnInit, OnChanges, OnDestroy {\n  @Input() className?: string;\n  @Input() color: HSLA | HSVA | RGBA | string = {\n    h: 250,\n    s: 0.5,\n    l: 0.2,\n    a: 1,\n  };\n  @Output() onChange = new EventEmitter<ColorEvent>();\n  @Output() onChangeComplete = new EventEmitter<ColorEvent>();\n  @Output() onSwatchHover = new EventEmitter<ColorEvent>();\n  oldHue!: number;\n  hsl!: HSLA;\n  hsv!: HSVA;\n  rgb!: RGBA;\n  hex!: string;\n  source!: string;\n  currentColor!: string;\n  changes!: Subscription;\n  disableAlpha?: boolean;\n  bnw!: boolean;\n\n  ngOnInit() {\n    this.changes = this.onChange\n      .pipe(debounceTime(100))\n      .subscribe(x => this.onChangeComplete.emit(x));\n    this.setState(toState(this.color, 0));\n    this.currentColor = this.hex;\n  }\n  ngOnChanges() {\n    this.setState(toState(this.color, this.oldHue));\n  }\n  ngOnDestroy() {\n    this.changes.unsubscribe();\n  }\n  setState(data) {\n    this.oldHue = data.oldHue;\n    this.hsl = data.hsl;\n    this.hsv = data.hsv;\n    this.rgb = data.rgb;\n    this.hex = data.hex;\n    this.source = data.source;\n    this.afterValidChange();\n  }\n  handleChange(data, $event) {\n    const isValidColor = simpleCheckForValidColor(data);\n    if (isValidColor) {\n      const color = toState(data, data.h || this.oldHue, this.disableAlpha);\n      this.setState(color);\n      this.onChange.emit({ color, $event });\n      this.afterValidChange();\n    }\n  }\n  /** hook for components after a complete change */\n  afterValidChange() {}\n\n  handleSwatchHover(data, $event) {\n    const isValidColor = simpleCheckForValidColor(data);\n    if (isValidColor) {\n      const color = toState(data, data.h || this.oldHue);\n      this.setState(color);\n      this.onSwatchHover.emit({ color, $event });\n    }\n  }\n}\n\n@NgModule({\n  declarations: [ColorWrap],\n  exports: [ColorWrap],\n  imports: [CommonModule],\n})\nexport class ColorWrapModule {}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { fromEvent, Subscription } from 'rxjs';\n\n@Component({\n  selector: 'color-editable-input',\n  template: `\n    <div class=\"wrap\" [ngStyle]=\"wrapStyle\">\n      <input\n        [ngStyle]=\"inputStyle\"\n        spellCheck=\"false\"\n        [value]=\"currentValue\"\n        [placeholder]=\"placeholder\"\n        (keydown)=\"handleKeydown($event)\"\n        (keyup)=\"handleKeyup($event)\"\n        (focus)=\"handleFocus($event)\"\n        (focusout)=\"handleFocusOut($event)\"\n      />\n      <span *ngIf=\"label\" [ngStyle]=\"labelStyle\" (mousedown)=\"handleMousedown($event)\">\n        {{ label }}\n      </span>\n    </div>\n  `,\n  styles: [\n    `\n      :host {\n        display: flex;\n      }\n      .wrap {\n        position: relative;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class EditableInputComponent implements OnInit, OnChanges, OnDestroy {\n  @Input() style!: {\n    wrap?: Record<string, any>;\n    input?: Record<string, any>;\n    label?: Record<string, any>;\n  };\n  @Input() label!: string;\n  @Input() value!: string | number;\n  @Input() arrowOffset!: number;\n  @Input() dragLabel!: boolean;\n  @Input() dragMax!: number;\n  @Input() placeholder = '';\n  @Output() onChange = new EventEmitter();\n  currentValue!: string | number;\n  blurValue!: string;\n  wrapStyle!: Record<string, string>;\n  inputStyle!: Record<string, string>;\n  labelStyle!: Record<string, string>;\n  focus = false;\n  mousemove!: Subscription;\n  mouseup!: Subscription;\n\n  ngOnInit() {\n    this.wrapStyle = this.style && this.style.wrap ? this.style.wrap : {};\n    this.inputStyle = this.style && this.style.input ? this.style.input : {};\n    this.labelStyle = this.style && this.style.label ? this.style.label : {};\n    if (this.dragLabel) {\n      this.labelStyle.cursor = 'ew-resize';\n    }\n  }\n  handleFocus($event) {\n    this.focus = true;\n  }\n  handleFocusOut($event) {\n    this.focus = false;\n    this.currentValue = this.blurValue;\n  }\n  handleKeydown($event) {\n    // In case `e.target.value` is a percentage remove the `%` character\n    // and update accordingly with a percentage\n    // https://github.com/casesandberg/react-color/issues/383\n    const stringValue = String($event.target.value);\n    const isPercentage = stringValue.indexOf('%') > -1;\n    const num = Number(stringValue.replace(/%/g, ''));\n    if (isNaN(num)) {\n      return;\n    }\n    const amount = this.arrowOffset || 1;\n\n    // Up\n    if ($event.keyCode === 38) {\n      if (this.label) {\n        this.onChange.emit({\n          data: { [this.label]: num + amount },\n          $event,\n        });\n      } else {\n        this.onChange.emit({ data: num + amount, $event });\n      }\n\n      if (isPercentage) {\n        this.currentValue = `${num + amount}%`;\n      } else {\n        this.currentValue = num + amount;\n      }\n    }\n\n    // Down\n    if ($event.keyCode === 40) {\n      if (this.label) {\n        this.onChange.emit({\n          data: { [this.label]: num - amount },\n          $event,\n        });\n      } else {\n        this.onChange.emit({ data: num - amount, $event });\n      }\n\n      if (isPercentage) {\n        this.currentValue = `${num - amount}%`;\n      } else {\n        this.currentValue = num - amount;\n      }\n    }\n  }\n  handleKeyup($event) {\n    if ($event.keyCode === 40 || $event.keyCode === 38) {\n      return;\n    }\n    if (`${this.currentValue}` === $event.target.value) {\n      return;\n    }\n\n    if (this.label) {\n      this.onChange.emit({\n        data: { [this.label]: $event.target.value },\n        $event,\n      });\n    } else {\n      this.onChange.emit({ data: $event.target.value, $event });\n    }\n  }\n  ngOnChanges() {\n    if (!this.focus) {\n      this.currentValue = String(this.value).toUpperCase();\n      this.blurValue = String(this.value).toUpperCase();\n    } else {\n      this.blurValue = String(this.value).toUpperCase();\n    }\n  }\n  ngOnDestroy() {\n    this.unsubscribe();\n  }\n  subscribe() {\n    this.mousemove = fromEvent(document, 'mousemove').subscribe((ev: Event) => this.handleDrag(ev));\n    this.mouseup = fromEvent(document, 'mouseup').subscribe(() => this.unsubscribe());\n  }\n  unsubscribe() {\n    if (this.mousemove) {\n      this.mousemove.unsubscribe();\n    }\n    if (this.mouseup) {\n      this.mouseup.unsubscribe();\n    }\n  }\n  handleMousedown($event: Event) {\n    if (this.dragLabel) {\n      $event.preventDefault();\n      this.handleDrag($event);\n      this.subscribe();\n    }\n  }\n  handleDrag($event) {\n    if (this.dragLabel) {\n      const newValue = Math.round(this.value + $event.movementX);\n      if (newValue >= 0 && newValue <= this.dragMax) {\n        this.onChange.emit({ data: { [this.label]: newValue }, $event });\n      }\n    }\n  }\n}\n\n@NgModule({\n  declarations: [EditableInputComponent],\n  exports: [EditableInputComponent],\n  imports: [CommonModule],\n})\nexport class EditableInputModule {}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnChanges,\n  Output,\n} from '@angular/core';\n\nimport { CoordinatesModule } from './coordinates.directive';\nimport { HSLA, HSLAsource } from './helpers/color.interfaces';\n\n@Component({\n  selector: 'color-hue',\n  template: `\n  <div class=\"color-hue color-hue-{{direction}}\" [style.border-radius.px]=\"radius\" [style.box-shadow]=\"shadow\">\n    <div ngx-color-coordinates (coordinatesChange)=\"handleChange($event)\" class=\"color-hue-container\">\n      <div class=\"color-hue-pointer\" [style.left]=\"left\" [style.top]=\"top\" *ngIf=\"!hidePointer\">\n        <div class=\"color-hue-slider\" [ngStyle]=\"pointer\"></div>\n      </div>\n    </div>\n  </div>\n  `,\n  styles: [\n    `\n    .color-hue {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .color-hue-container {\n      margin: 0 2px;\n      position: relative;\n      height: 100%;\n    }\n    .color-hue-pointer {\n      position: absolute;\n    }\n    .color-hue-slider {\n      margin-top: 1px;\n      width: 4px;\n      border-radius: 1px;\n      height: 8px;\n      box-shadow: 0 0 2px rgba(0, 0, 0, .6);\n      background: #fff;\n      transform: translateX(-2px);\n    }\n    .color-hue-horizontal {\n      background: linear-gradient(to right, #f00 0%, #ff0 17%, #0f0\n        33%, #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n    }\n    .color-hue-vertical {\n      background: linear-gradient(to top, #f00 0%, #ff0 17%, #0f0 33%,\n        #0ff 50%, #00f 67%, #f0f 83%, #f00 100%);\n    }\n  `,\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class HueComponent implements OnChanges {\n  @Input() hsl!: HSLA;\n  @Input() pointer!: Record<string, string>;\n  @Input() radius!: number;\n  @Input() shadow!: string;\n  @Input() hidePointer = false;\n  @Input() direction: 'horizontal' | 'vertical' = 'horizontal';\n  @Output() onChange = new EventEmitter<{ data: HSLAsource; $event: Event }>();\n  left = '0px';\n  top = '';\n\n  ngOnChanges(): void {\n    if (this.direction === 'horizontal') {\n      this.left = `${this.hsl.h * 100 / 360}%`;\n    } else {\n      this.top = `${-(this.hsl.h * 100 / 360) + 100}%`;\n    }\n  }\n  handleChange({ top, left, containerHeight, containerWidth, $event }): void {\n    let data: HSLAsource | undefined;\n    if (this.direction === 'vertical') {\n      let h: number;\n      if (top < 0) {\n        h = 359;\n      } else if (top > containerHeight) {\n        h = 0;\n      } else {\n        const percent = -(top * 100 / containerHeight) + 100;\n        h = 360 * percent / 100;\n      }\n\n      if (this.hsl.h !== h) {\n        data = {\n          h,\n          s: this.hsl.s,\n          l: this.hsl.l,\n          a: this.hsl.a,\n          source: 'rgb',\n        };\n      }\n    } else {\n      let h: number;\n      if (left < 0) {\n        h = 0;\n      } else if (left > containerWidth) {\n        h = 359;\n      } else {\n        const percent = left * 100 / containerWidth;\n        h = 360 * percent / 100;\n      }\n\n      if (this.hsl.h !== h) {\n        data = {\n          h,\n          s: this.hsl.s,\n          l: this.hsl.l,\n          a: this.hsl.a,\n          source: 'rgb',\n        };\n      }\n    }\n\n    if (!data) {\n      return;\n    }\n\n    this.onChange.emit({ data, $event });\n  }\n}\n\n@NgModule({\n  declarations: [HueComponent],\n  exports: [HueComponent],\n  imports: [CommonModule, CoordinatesModule],\n})\nexport class HueModule {}\n","import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, Input, NgModule } from '@angular/core';\n\nexport type zDepth = 0 | 1 | 2 | 3 | 4 | 5;\n\n@Component({\n  selector: 'color-raised',\n  template: `\n  <div class=\"raised-wrap\">\n    <div class=\"raised-bg zDepth-{{zDepth}}\" [style.background]=\"background\"></div>\n    <div class=\"raised-content\">\n      <ng-content></ng-content>\n    </div>\n  </div>\n  `,\n  styles: [`\n    .raised-wrap {\n      position: relative;\n      display: inline-block;\n    }\n    .raised-bg {\n      position: absolute;\n      top: 0px;\n      right: 0px;\n      bottom: 0px;\n      left: 0px;\n    }\n    .raised-content {\n      position: relative;\n    }\n    .zDepth-0 {\n      box-shadow: none;\n    }\n    .zDepth-1 {\n      box-shadow: 0 2px 10px rgba(0,0,0,.12), 0 2px 5px rgba(0,0,0,.16);\n    }\n    .zDepth-2 {\n      box-shadow: 0 6px 20px rgba(0,0,0,.19), 0 8px 17px rgba(0,0,0,.2);\n    }\n    .zDepth-3 {\n      box-shadow: 0 17px 50px rgba(0,0,0,.19), 0 12px 15px rgba(0,0,0,.24);\n    }\n    .zDepth-4 {\n      box-shadow: 0 25px 55px rgba(0,0,0,.21), 0 16px 28px rgba(0,0,0,.22);\n    }\n    .zDepth-5 {\n      box-shadow: 0 40px 77px rgba(0,0,0,.22), 0 27px 24px rgba(0,0,0,.2);\n    }\n  `],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RaisedComponent {\n  @Input() zDepth: zDepth = 1;\n  @Input() radius = 1;\n  @Input() background = '#fff';\n}\n\n@NgModule({\n  declarations: [RaisedComponent],\n  exports: [RaisedComponent],\n  imports: [CommonModule],\n})\nexport class RaisedModule { }\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnChanges,\n  Output,\n} from '@angular/core';\n\n\nimport { CoordinatesModule } from './coordinates.directive';\nimport { HSLA, HSVA, HSVAsource } from './helpers/color.interfaces';\n\n@Component({\n  selector: 'color-saturation',\n  template: `\n  <div class=\"color-saturation\" ngx-color-coordinates (coordinatesChange)=\"handleChange($event)\" [style.background]=\"background\">\n    <div class=\"saturation-white\">\n      <div class=\"saturation-black\"></div>\n      <div class=\"saturation-pointer\" [ngStyle]=\"pointer\" [style.top]=\"pointerTop\" [style.left]=\"pointerLeft\">\n        <div class=\"saturation-circle\" [ngStyle]=\"circle\"></div>\n      </div>\n    </div>\n  </div>\n  `,\n  styles: [\n    `\n    .saturation-white {\n      background: linear-gradient(to right, #fff, rgba(255,255,255,0));\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .saturation-black {\n      background: linear-gradient(to top, #000, rgba(0,0,0,0));\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .color-saturation {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .saturation-pointer {\n      position: absolute;\n      cursor: default;\n    }\n    .saturation-circle {\n      width: 4px;\n      height: 4px;\n      box-shadow: 0 0 0 1.5px #fff, inset 0 0 1px 1px rgba(0,0,0,.3), 0 0 1px 2px rgba(0,0,0,.4);\n      border-radius: 50%;\n      cursor: hand;\n      transform: translate(-2px, -4px);\n    }\n  `,\n  ],\n  preserveWhitespaces: false,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SaturationComponent implements OnChanges {\n  @Input() hsl!: HSLA;\n  @Input() hsv!: HSVA;\n  @Input() radius!: number;\n  @Input() pointer!: Record<string, string>;\n  @Input() circle!: Record<string, string>;\n  @Output() onChange = new EventEmitter<{ data: HSVAsource; $event: Event }>();\n  background!: string;\n  pointerTop!: string;\n  pointerLeft!: string;\n\n  ngOnChanges() {\n    this.background = `hsl(${this.hsl.h}, 100%, 50%)`;\n    this.pointerTop = -(this.hsv.v * 100) + 1 + 100 + '%';\n    this.pointerLeft = this.hsv.s * 100 + '%';\n  }\n  handleChange({ top, left, containerHeight, containerWidth, $event }) {\n    if (left < 0) {\n      left = 0;\n    } else if (left > containerWidth) {\n      left = containerWidth;\n    } else if (top < 0) {\n      top = 0;\n    } else if (top > containerHeight) {\n      top = containerHeight;\n    }\n\n    const saturation = left / containerWidth;\n    let bright = -(top / containerHeight) + 1;\n    bright = bright > 0 ? bright : 0;\n    bright = bright > 1 ? 1 : bright;\n\n    const data: HSVAsource = {\n      h: this.hsl.h,\n      s: saturation,\n      v: bright,\n      a: this.hsl.a,\n      source: 'hsva',\n    };\n    this.onChange.emit({ data, $event });\n  }\n}\n\n@NgModule({\n  declarations: [SaturationComponent],\n  exports: [SaturationComponent],\n  imports: [CommonModule, CoordinatesModule],\n})\nexport class SaturationModule {}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnInit,\n  Output,\n} from '@angular/core';\n\nimport { CheckboardModule } from './checkboard.component';\n\n@Component({\n  selector: 'color-swatch',\n  template: `\n    <div\n      class=\"swatch\"\n      [ngStyle]=\"currentStyles()\"\n      [attr.title]=\"color\"\n      (click)=\"handleClick(color, $event)\"\n      (keydown.enter)=\"handleClick(color, $event)\"\n      (focus)=\"handleFocus()\"\n      (blur)=\"handleFocusOut()\"\n      (mouseover)=\"handleHover(color, $event)\"\n      tabindex=\"0\"\n    >\n      <ng-content></ng-content>\n      <color-checkboard\n        *ngIf=\"color === 'transparent'\"\n        boxShadow=\"inset 0 0 0 1px rgba(0,0,0,0.1)\"\n      ></color-checkboard>\n    </div>\n  `,\n  styles: [\n    `\n      .swatch {\n        outline: none;\n        height: 100%;\n        width: 100%;\n        cursor: pointer;\n        position: relative;\n      }\n    `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SwatchComponent implements OnInit {\n  @Input() color!: string;\n  @Input() style: Record<string, string> = {};\n  @Input() focusStyle: Record<string, string> = {};\n  @Input() focus!: boolean;\n  @Output() onClick = new EventEmitter<any>();\n  @Output() onHover = new EventEmitter<any>();\n  divStyles: Record<string, string> = {};\n  focusStyles: Record<string, string> = {};\n  inFocus = false;\n\n  ngOnInit() {\n    this.divStyles = {\n      background: this.color as string,\n      ...this.style,\n    };\n  }\n  currentStyles() {\n    this.focusStyles = {\n      ...this.divStyles,\n      ...this.focusStyle,\n    };\n    return this.focus || this.inFocus ? this.focusStyles : this.divStyles;\n  }\n  handleFocusOut() {\n    this.inFocus = false;\n  }\n  handleFocus() {\n    this.inFocus = true;\n  }\n  handleHover(hex: string, $event) {\n    this.onHover.emit({ hex, $event });\n  }\n  handleClick(hex: string, $event) {\n    this.onClick.emit({ hex, $event });\n  }\n}\n\n@NgModule({\n  declarations: [SwatchComponent],\n  exports: [SwatchComponent],\n  imports: [CommonModule, CheckboardModule],\n})\nexport class SwatchModule {}\n","import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  NgModule,\n  OnChanges,\n  Output,\n} from '@angular/core';\nimport { CoordinatesModule } from './coordinates.directive';\nimport { HSLA, RGBA } from './helpers/color.interfaces';\nimport { TinyColor } from '@ctrl/tinycolor';\n\n\n@Component({\n  selector: 'color-shade',\n  template: `\n    <div class=\"shade\" [style.border-radius]=\"radius\">\n      <div\n        class=\"shade-gradient\"\n        [ngStyle]=\"gradient\"\n        [style.box-shadow]=\"shadow\"\n        [style.border-radius]=\"radius\"\n      ></div>\n      <div\n        ngx-color-coordinates\n        (coordinatesChange)=\"handleChange($event)\"\n        class=\"shade-container\"\n      >\n        <div\n          class=\"shade-pointer\"\n          [style.left.%]=\"pointerLeft\"\n          [style.top.%]=\"pointerTop\"\n        >\n          <div class=\"shade-slider\" [ngStyle]=\"pointer\"></div>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [\n    `\n    .shade {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .shade-gradient {\n      position: absolute;\n      top: 0;\n      bottom: 0;\n      left: 0;\n      right: 0;\n    }\n    .shade-container {\n      position: relative;\n      height: 100%;\n      margin: 0 3px;\n    }\n    .shade-pointer {\n      position: absolute;\n    }\n    .shade-slider {\n      width: 4px;\n      border-radius: 1px;\n      height: 8px;\n      box-shadow: 0 0 2px rgba(0, 0, 0, .6);\n      background: #fff;\n      margin-top: 1px;\n      transform: translateX(-2px);\n    },\n  `,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n})\nexport class ShadeComponent implements OnChanges {\n  @Input() hsl!: HSLA;\n  @Input() rgb!: RGBA;\n  @Input() pointer!: Record<string, string>;\n  @Input() shadow!: string;\n  @Input() radius!: string;\n  @Input() bnw!: boolean;\n  @Output() onChange = new EventEmitter<any>();\n  gradient!: Record<string, string>;\n  pointerLeft!: number;\n  pointerTop?: number;\n\n  ngOnChanges() {\n    const colorGradient = `linear-gradient(to right,\n      hsl(${this.hsl.h}, 90%, 55%),\n      #000)`;\n    const whiteToBlackGradient = `linear-gradient(to right, #fff, #000)`;\n    const bgGradient = this.bnw ? whiteToBlackGradient : colorGradient;\n\n    this.gradient = {\n      background: bgGradient\n    };\n    const hsv = new TinyColor(this.hsl).toHsv();\n    this.pointerLeft = 100 - (hsv.v * 100);\n  }\n\n  handleChange({ left, containerWidth, $event }): void {\n    let data;\n    let v: number;\n    if (left < 0) {\n      v = 0;\n    } else if (left > containerWidth) {\n      v = 1;\n    } else {\n      v = Math.round((left * 100) / containerWidth) / 100;\n    }\n\n    const hsv = new TinyColor(this.hsl).toHsv();\n    if (hsv.v !== v) {\n      data = {\n        h: this.hsl.h,\n        s: this.bnw ? 0 : 1,\n        v: 1 - v,\n        l: this.hsl.l,\n        a: this.hsl.a,\n        source: 'rgb',\n      };\n    }\n\n    if (!data) {\n      return;\n    }\n\n    this.onChange.emit({ data, $event });\n  }\n}\n\n@NgModule({\n  declarations: [ShadeComponent],\n  exports: [ShadeComponent],\n  imports: [CommonModule, CoordinatesModule],\n})\nexport class ShadeModule { }\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}